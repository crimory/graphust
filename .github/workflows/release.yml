name: Create macOS Release

on:
    push:
        branches:
            - release

env:
    RELEASE_VERSION: v0.1.8
    RELEASE_NOTES: "Actual first release"


jobs:
    release:
        runs-on: macos-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Install Rust
              run: |
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
                export PATH="$HOME/.cargo/bin:$PATH"
                rustup update
            - name: Build and package
              run: |
                cargo build --release
                tar czf graphust.tar.gz target/release/graphust
            - name: Upload Binary
              uses: actions/upload-artifact@v3
              with:
                name: graphust
                path: graphust.tar.gz
            - name: Update GIT tag
              run: |
                git config --global user.email "noreply@example.com"
                git config --global user.name "${{ github.actor }}"
                git tag ${{ env.RELEASE_VERSION }}
                git push origin ${{ env.RELEASE_VERSION }}
            - name: Create Release
              run: |
                release_title="Release ${{ env.RELEASE_VERSION }}"
                release_tag="${{ env.RELEASE_VERSION }}"
                release_body="${{ env.RELEASE_NOTES }}"
                token="${{ secrets.GITHUB_TOKEN }}"

                # Create the release using the GitHub API
                response=$(curl -X POST -sSL \
                  -H "Authorization: token $token" \
                  -H "Accept: application/vnd.github+json" \
                  https://api.github.com/repos/${{ github.repository }}/releases \
                  -d '{
                    "tag_name": "'"${release_tag}"'",
                    "name": "'"${release_title}"'",
                    "body": "'"${release_body}"'",
                    "draft": false,
                    "prerelease": false
                  }')

                # Print the response from the API for debugging purposes
                echo "$response"
            - name: Attach Artifact to Release
              uses: actions/upload-release-asset@v1
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: graphust.tar.gz
                asset_name: graphust.tar.gz
                asset_content_type: application/gzip
            - name: Print SHA
              run: shasum -a 256 graphust.tar.gz | awk '{print $1}'
